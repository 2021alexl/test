from transformers import pipeline, AutoModelForTokenClassification, AutoTokenizer
import pandas as pd 
import numpy as np
import streamlit as st
import plotly.express as px
import plotly.graph_objects as go
import base64
def change_label(x):
    if type(x) == list:
        return x
    elif type(x) == str:
        if ',' in x:
            x = x.replace('[','').replace(']','').replace("'","")
            temp = x.split(',')
            if 1 == 1:
                tl = []
                for item in temp:
                    if item[0] == ' ':
                        item = item[1:]
                    tl += [item]
            x = tl
        else:
            x = x.replace('[','').replace(']','').replace("'","")
            x = [x]
        return x
    
def create_train():
    foodlist = ['egg',
 'banana',
 'black coffee',
 'fresh apple',
 'avocado',
 'olive oil',
 'lettuce',
 'grapes',
 'orange',
 'cucumber',
 'cooked oatmeal',
 'peanut butter',
 'mixed greens',
 'grape tomatoes',
 'tortilla chips',
 'cooked shrimp',
 'mayonnaise',
 'water',
 'pineapple',
 'sugar',
 'clementine',
 'pear',
 'white bread',
 'fat free salsa',
 'cooked ham',
 'mixed berries',
 'low-fat milk',
 'grapefruit',
 'ketchup',
 'cream cheese',
 'sour cream',
 'corn',
 'fried egg',
 'walnut',
 'cantaloupe',
 'whole milk',
 'mustard',
 'pretzel',
 'olive',
 'arugula',
 'tangerine',
 'maple syrup',
 'cooked egg',
 'egg',
 'vegetable soup',
 'plain bagel',
 'potato chips',
 'raisins',
 'rye bread',
 'swiss cheese',
 'cooked quinoa',
 'table salt',
 'beer',
 'cherries',
 'peanuts',
 'mango',
 'black pepper',
 'tuna salad',
 'meat loaf',
 'uncooked kale',
 'diet soda',
 'sauerkraut',
 'italian bread',
 'cornbread',
 'poached egg',
 'cooked tilapia',
 'smoked salmon',
 'green tea',
 'raw cashews',
 'beef stew',
 'pico de gallo',
 'salsa sauce',
 'french bread',
 'kiwifruit',
 'sausage patty',
 'hard roll',
 'minced garlic',
 'almond butter',
 'cooked celery',
 'dinner roll',
 'teriyaki sauce',
 'cooking spray',
 'honeydew melon',
 'barbecue sauce',
 'whiskey',
 'white pita',
 'blue cheese',
 'cooked lentils',
 'light ranch',
 'jelly',
 'canola oil',
 'cilantro',
 'garlic bread',
 'queso dip',
 'caesar salad',
 'pancake syrup',
 'sliced almonds',
 'chopped pecans',
 'jam',
 'feta cheese',
 'gin',
 'dijon mustard',
 'sesame oil',
 'tequila',
 'avocado oil',
 'cooked venison',
 'soy sauce',
 'spanish rice',
 'lox',
 'oatly oat milk',
 'biscuit',
 'tzatziki',
 'cheeseburger',
 'champagne',
 'margarine',
 'basil pesto',
 'hot dog bun',
 'cabbage soup',
 'mini pretzels',
 'peach',
 'split pea soup',
 'rum',
 'basil',
 'light beer',
 'eggplant',
 'orange juice',
 'gouda cheese',
 'soft beef taco',
 'fresh spinach',
 'grilled shrimp',
 'grape jelly',
 'gravy',
 'cooked penne',
 'lemon',
 'light cream',
 'snow peas',
 'french toast',
 'chicken chili',
 'brie cheese',
 'deviled egg',
 'medjool dates',
 "tito's vodka",
 'crab cake',
 'brown gravy',
 'strawberry jam',
 'corn chips',
 'oat milk',
 'chili powder',
 'cooked orzo',
 'miso soup',
 'genoa salami',
 'avocado toast',
 'prosecco',
 'flaxseeds',
 'light butter',
 'angelfood cake',
 'stuffing',
 'cooked farro',
 'imitation crab',
 'rice pilaf',
 'potato salad',
 'agave nectar',
 'turkey burger',
 'fat-free latte',
 'ahi tuna',
 'bread',
 'scotch',
 'chickpeas',
 'heavy cream',
 'pepperoni',
 'protein powder',
 'ginger root',
 'chipotle steak',
 'egg salad',
 'hoisin sauce',
 'london broil',
 'capers',
 'ciabatta bun',
 'chicken taco',
 'havarti cheese',
 'english muffin',
 'coconut oil',
 'raisin bread',
 'pepsi cola',
 'challah bread',
 'trail mix',
 'baked beans',
 'fried shrimp',
 'kaiser roll',
 'pita chips',
 'pickled beets',
 'nectarine',
 'corn flakes',
 'honey mustard',
 'chives',
 'bloody mary',
 'cooked tuna',
 'brownie',
 'strawberries',
 'diet coke®',
 'earl grey tea',
 'marshmallow',
 'gingersnap',
 'snickers minis',
 'carne asada',
 'papaya',
 'dry rosé wine',
 'cooked lobster',
 'garlic hummus',
 "shepherd's pie",
 'broccolini',
 'hot sauce',
 'tartar sauce',
 'smoothie',
 'egg',
 'pork tamale',
 'fried rice',
 'crab rangoon',
 'chorizo',
 'apple butter',
 'vinegar',
 'plain naan',
 'kielbasa',
 'ciabatta',
 'dr pepper soda',
 'brazil nuts',
 'fish taco',
 'focaccia bread',
 'kimchi',
 'fried calamari',
 'sesame chicken',
 'hearts of palm',
 'sloppy joe',
 'curry chicken',
 'pasta salad',
 'garlic knot',
 'fried fish',
 'gummy bears',
 'relish',
 'sausage gravy',
 'cheesecake',
 'sesame seeds',
 'turkey gravy',
 'summer sausage',
 'candied pecans',
 'raw sugar',
 'fried okra',
 'alfredo sauce',
 'hemp seeds',
 'seaweed salad',
 'beef pastrami',
 'sushi rice',
 'tangelo',
 'boiled potato',
 'cornstarch',
 'kombucha',
 'snickerdoodle',
 'biscotti',
 'pad thai',
 'bibb lettuce',
 'beef bologna',
 'tahini',
 'flatbread',
 'hard candy',
 'breadstick',
 'ginger ale',
 'cooked ziti',
 'moscato',
 'macaroni salad',
 'brandy',
 'salsa verde',
 'gruyère cheese',
 'cotija cheese',
 'plain scone',
 'plain biscotti',
 'vodka sauce',
 'cinnamon sugar',
 'dill',
 'pine nuts',
 'lump crabmeat',
 'pesto sauce',
 'coconut shrimp',
 'baby arugula',
 'baked apple',
 'escarole',
 'kfc biscuit',
 'cooked bulgur',
 'garlic powder',
 'empanadas',
 'prosciutto',
 'beef goulash',
 'carnitas',
 'potato gnocchi',
 'paprika',
 'fudge',
 'mini naan',
 'peppermint tea',
 'coconut water',
 'asian pear',
 'beef jerky',
 'green smoothie',
 'persimmon',
 'poblano chile',
 'candy cane',
 'pretzel rod',
 'pancake',
 'chicken gumbo',
 'fresh date',
 'waffle fries',
 'apricot jam',
 'jones ham',
 'just egg',
 'kettle corn',
 'kettle chips',
 'shortbread',
 'apple juice',
 'apple fritter',
 'cooked polenta',
 'barbecue pork',
 'apple pie',
 'pumpkin bread',
 'cooked mussels',
 'taco sauce',
 'bacon grease',
 'dried cherries',
 'cooked pasta',
 'crepe',
 'lobster bisque',
 'pomegranate',
 'bone broth',
 'kale salad',
 'fried wontons',
 'italian sub',
 'shrimp scampi',
 'snow crab leg',
 'spicy mayo',
 'brunswick stew',
 'tuna steak',
 'zuppa toscana',
 'melon balls',
 'garlic naan',
 'baby bok choy',
 'steak fries',
 'apple cider',
 'asiago cheese',
 'cheese sauce',
 'americano',
 'tabouli',
 'potato bread',
 'meat sauce',
 'chicken nachos',
 'pepperoncini',
 'shrimp taco',
 'zucchini bread',
 'ranch dip',
 'pickled egg',
 'stromboli',
 'chicken gyro',
 'raisin toast',
 'salted cashew',
 'ground cumin',
 'wheat bread',
 'shrimp ceviche',
 'macaroon',
 'canned carrots',
 'pickled onions',
 'manhattan',
 'beef salami',
 'red sangria',
 'ginger tea',
 'lemonade',
 'shrimp lo mein',
 'miller mgd 64',
 'tortilla soup',
 'gyro',
 'pie crust',
 'dried date',
 'canned hominy',
 'fish and chips',
 'energy balls',
 'banana pudding',
 'nori seaweed',
 'bread pudding',
 'oatmeal cookie',
 'gyoza',
 'cashew chicken',
 'egg white',
 'ham sandwich',
 'white sub roll',
 'cheese bread',
 'cannoli',
 'ice cream',
 'nilla wafers',
 'shrimp tempura',
 'sugar free jam',
 'cooked clams',
 'mongolian beef',
 'lemon zest',
 'barilla penne',
 'smoked almonds',
 'coconut sugar',
 'quinoa salad',
 'peanut brittle',
 'stuffed shell',
 'whey powder',
 'mango salsa',
 'spinach wrap',
 '7 up diet soda',
 'frozen yogurt',
 'utz pub mix',
 'bundt cake',
 'sea salt',
 'almond flour',
 'risotto',
 'ahi poke',
 'kefir',
 'french roll',
 'cacao powder',
 'fresh fig',
 'panettone',
 'jelly beans',
 'aioli',
 'acai bowl',
 'rice pudding',
 'slider rolls',
 'apple crisp',
 'baking powder',
 'garlic salt',
 'bottled water',
 'creamed corn',
 'dried oregano',
 'stout',
 'shrimp salad',
 'duck sauce',
 'sprinkles',
 'dragon fruit',
 'root beer',
 'samosa',
 'cuban sandwich',
 'hard cider',
 'uncooked farro',
 'churros',
 'coconut aminos',
 'creme brulee',
 'oyster sauce',
 'steak taco',
 'sake',
 'pozole',
 'fruitcake',
 'tomato juice',
 'port wine',
 'oatmeal bread',
 'eggnog',
 '7 grain bread',
 'chia pudding',
 'turkey taco',
 'sriracha mayo',
 'chile relleno',
 'onion bagel',
 'spinach dip',
 'matzo',
 'key lime pie',
 'chicken tamale',
 'sparkling wine',
 'toffee pieces',
 'curly fries',
 'pork dumpling',
 'butter chicken',
 'gelato',
 'poke bowl',
 'absolut vodka',
 'corn salsa',
 'cucumber',
 'liverwurst',
 'pork rinds',
 'diet root beer',
 'turkey jerky',
 'chicken tikka',
 'chapati',
 'cooked salmon',
 'sicilian pizza',
 'plain croutons',
 'king cake',
 'kix cereal',
 'cava tzatziki',
 'swiss cheese',
 'ceviche',
 'fried tofu',
 'ponzu sauce',
 'dr pepper soda',
 'club soda',
 'prune juice',
 'pepper steak',
 'cinnamon toast',
 'fried oysters',
 'pretzel chips',
 'chicken flauta',
 'fontina cheese',
 'egg bagel',
 'oat bran bread',
 'ground nutmeg',
 "hoppin' john",
 'cola',
 'pomelo',
 'tajin spice',
 'plum',
 'cayenne pepper',
 'cooked fennel',
 'fried plantain',
 'lemon curd',
 'fried pickle',
 'diet cola',
 'mochi',
 'pretzel roll',
 'dirty rice',
 'boston lettuce',
 'vegan chili',
 'soy glaze',
 'peach cobbler',
 'dijon mustard',
 'cooked elk',
 'steak salad',
 'cooked farina',
 'crème frâiche',
 'miso',
 'walleye pike',
 'kahlua',
 'corn casserole',
 'labneh',
 'sucralose',
 'uncooked beets',
 'popover',
 'ritz crackers',
 'baba ghanoush',
 'stuffed salmon',
 'old fashioned',
 'cava hummus',
 'marsala sauce',
 'crispix cereal',
 'shrimp shumai',
 'pork taco',
 'eggs benedict',
 'tempeh',
 'beef teriyaki',
 'tonkatsu ramen',
 'melba toast',
 'pancetta',
 'psyllium husk',
 '7 up soda',
 'apple cake',
 'hibachi steak',
 'praline pecans',
 'hot cocoa mix',
 'egg white',
 'pecan sandies',
 'spaetzle',
 'cooked fusilli',
 'grape juice',
 'flan',
 'buddig ham',
 'antipasto',
 'country ham',
 'chow mei fun',
 'cognac',
 'dried apple',
 'regular butter',
 'glazed carrots',
 'pound cake',
 'ahi poke bowl',
 'sherbet',
 'sunflower oil',
 'pork lo mein',
 'menudo',
 'spicy hummus',
 'licorice',
 'kosher salt',
 'onion soup mix',
 'garlic aioli',
 'corn nuts',
 'peanut oil',
 'country gravy',
 'mesclun',
 'chili oil',
 'broth',
 'coco coco lace',
 'skyy vodka',
 'squash soup',
 'dried thyme',
 'fresh lime',
 'rosemary bread',
 'wasabi peas',
 'sonic corn dog',
 'tamari sauce',
 'chickpea salad',
 'stroopwafel',
 'mostaccioli',
 'onion powder',
 'corn chowder',
 'zero™',
 'bacon fat',
 'roasted corn',
 'frozen okra ',
 'snack mix',
 'pickled ginger',
 'endive',
 'barilla elbows',
 'bagel chips',
 'grape tomatoes',
 'coffee cake',
 'refried beans',
 'caramel syrup',
 'beef lo mein',
 'bbq sauce',
 'saag paneer',
 'brioche',
 'rose champagne',
 'curry powder',
 'raita',
 'aloo gobi',
 'chana masala',
 'chicken panini',
 'saffron rice',
 'muesli',
 'marmalade',
 'ground oregano',
 'paella',
 'farmer cheese',
 'caesar salad',
 'soup dumplings',
 'grape jam',
 'flaxseed oil',
 'lemon tea',
 'beef birria',
 'rum cake',
 'kit kat bar',
 'molasses',
 'guava',
 'trix cereal',
 'chopped salad',
 'apple strudel',
 'chicken kabobs',
 'bagel bites',
 'pho broth',
 'chilaquiles',
 "reese's take 5",
 'fried scallops',
 'boiled wontons',
 'whoopie pie',
 'bagel',
 'frito pie',
 'mixed greens',
 'cooked whiting',
 'lasagna soup',
 'masala chai',
 'avocado dip',
 'ihop bacon (3)',
 'shrimp risotto',
 'sauteed shrimp',
 'dill havarti',
 'fried shallots',
 'lamb gyro',
 'sour pickle',
 'romano cheese',
 'bialy',
 'paneer',
 'beef kabobs',
 'fried noodles',
 'hot water',
 'sweet vermouth',
 'zucchini fries',
 'fennel',
 'fish sauce',
 'cooked tempeh',
 'tirami-su',
 'lamb stew',
 'mascarpone',
 'chile rellenos',
 'cream gravy',
 'almond granola',
 'wine spritzer',
 'apple jelly',
 'irish cream',
 'cholent',
 'polar seltzer',
 'chicken mole',
 'folgers coffee',
 'lemon pepper',
 'braunschweiger',
 'dried currants',
 'tonic water',
 'lemon hummus',
 'thai boba',
 'chana dal',
 'caramel latte',
 'lamb kabobs',
 'pepsi cola',
 'fruit gummies',
 'baked clams',
 'cooked pollock',
 'ginger beer',
 'sprite soda',
 'paratha',
 'beef picadillo',
 'blondie',
 'rumchata',
 'duck egg',
 'cooked millet',
 'chicken curry',
 'beignet',
 'cioppino',
 'scotcheroo',
 'miso paste',
 'vanilla syrup',
 'negroni',
 'maple sugar',
 'peach pie',
 'safflower oil',
 'soy chorizo',
 'tomatillo',
 'stuffed clam',
 'honey',
 'peasant bread',
 'avocado salad',
 'bubble tea',
 'pumpkin butter',
 'sliced nopales',
 'waldorf salad',
 'burrito bowl',
 'gingerbread',
 'petit fours',
 'cheese fondue',
 'mango chutney',
 'pecan pie',
 'turkey bologna',
 'spring onion',
 'fudge bar',
 'paczki',
 'oxtail soup',
 'white vinegar',
 'swiss steak',
 'candy gumdrops',
 'canned salmon',
 'silken tofu',
 'tea with cream',
 'salt bagel',
 'kix cereal',
 'pork gyoza',
 'chayote squash',
 'steak sauce',
 'peach salsa',
 'horseradish',
 'caprese salad',
 'papadum',
 'limoncello',
 'sorbet',
 'bourbon ball',
 'dill gherkins',
 'beef tamale',
 'wegmans hummus',
 'mango popsicle',
 'benihana salad',
 'pork wonton',
 'cheese straws',
 'tofu stir fry',
 'hotdish',
 'chicken adobo',
 'shrimp pho',
 'golden beet',
 'sopaipillas',
 'arnold palmer',
 'livermush',
 'syrah red wine',
 'wawa pretzel',
 'yaki udon',
 'ice cube',
 'pancit',
 'custard',
 'potato latkes',
 'potato knish',
 'firm tofu',
 'tapioca',
 'chicken korma',
 'dry vermouth',
 'babka',
 'goat milk',
 'tofu pho',
 'mirin',
 'fish fry',
 'kumquats',
 'coq au vin',
 'sausage roll',
 'ambrosia',
 'maple donut',
 'cortado',
 'rice milk',
 'sushi eel roll',
 'coconut cream',
 'kale chip',
 'boiled peanuts',
 'aperol spritz',
 'scrod',
 'honey cashews',
 'pumpkin pie',
 'corn oil',
 'sambal oelek',
 'fig spread',
 'caviar',
 'almond extract',
 'triple sec',
 'kibbeh',
 'cooked squid',
 '2% milk latte',
 'fresh garlic',
 'migas',
 'chocolate milk',
 'demerara sugar',
 'harissa paste',
 'tom yum kung',
 'silver tequila',
 'uncooked orzo',
 'nutella crepe',
 'utz party mix',
 'thai iced tea',
 'eggbake',
 'cooked malanga',
 'chopped liver',
 'edamame pasta',
 'cornichons',
 'dried beef',
 'banana chips',
 'blooming onion',
 'cooked moose',
 'sour cream dip',
 'runza',
 'silva linguica',
 'margarita mix',
 'bear claw',
 'greek pizza',
 "amy's pad thai",
 'light wine',
 'dr pepper soda',
 'kung pao sauce',
 'bimbo conchas',
 'turkey reuben',
 'salmon steak',
 'sponge cakes',
 'maki sushi',
 'bean chili',
 'garlic clove',
 'minced onion',
 'jambalaya mix',
 'palak paneer',
 'nutella toast',
 'irish coffee',
 'olive loaf',
 'sriracha aioli',
 'walnut oil',
 'japanese curry',
 'goat curry',
 'yerba mate',
 'boudin ball',
 'dried rosemary',
 'bar cookie',
 'cumin seeds',
 'nerds candy',
 'horchata',
 'brick cheese',
 'crab leg',
 'dried marjoram',
 'potato sticks',
 'milk tea',
 'french bread',
 'dry sherry',
 'saag',
 'rusk toast',
 'cherry jelly',
 'doublemint gum',
 'wakame seaweed',
 'rosemary',
 'dried parsley',
 'a&w root beer',
 'jerk chicken',
 'wheat sub roll',
 'fattoush',
 'chicken saag',
 'char shiu bao ',
 'crispix cereal',
 'pizza bread',
 'sesame noodles',
 'chocolate coin',
 'brisket tacos',
 'cooked egg ',
 'plum sauce',
 'marzipan',
 'surimi',
 'kit kat thins',
 'beef chop suey',
 'egg on toast',
 'beef curry',
 'dulce de leche',
 'cos lettuce',
 'shakshuka',
 'coconut flour',
 'eclair',
 'franzia merlot',
 'dutch baby',
 'ropa vieja',
 'uncooked pasta',
 'chutney',
 'semolina roll',
 'almonds',
 'she-crab soup',
 'lavash',
 'baking soda',
 'bell bialys',
 'beef flauta',
 'rolled tacos',
 'zevia cola',
 'dr pepper cola',
 'vermouth',
 'lobster salad',
 'cacique cotija',
 'orange sauce',
 'kroger ketchup',
 'pabst beer',
 'date-nut bread',
 'chicory',
 'fruit punch',
 'egg',
 'fresh oregano',
 'kroger quinoa',
 'lava cake',
 'tofu pad thai',
 'taco salad',
 'plum jam',
 'pesto pizza',
 'olive hummus',
 'diet soda',
 'cooked quinoa',
 'belgian endive',
 'sugared pecans',
 'beef chow fun',
 'fried clams',
 'edam cheese',
 'papaya',
 'lemon wedge',
 'poutine',
 'inari sushi',
 'tea bag',
 'soda water',
 'celery stock',
 'cooked spinach',
 'candy corn',
 'seafood pho',
 'apple tart',
 'garlic paste',
 'honey',
 'cedars baklava',
 'praline',
 'raw peanuts',
 'almond chicken',
 'squirt soda',
 'maca',
 'kimchi',
 'selects cereal',
 'bacon burger',
 'saccharin',
 'wine sauce',
 'red crab soup',
 'baby shrimp',
 'romesco sauce',
 'kayem hot dogs',
 'veal marsala',
 'romanesco',
 'gooseberries',
 'spaghetti pie',
 'pepsi cola',
 'cooked taro',
 'jollof rice',
 'quorn pieces',
 'pickle juice',
 'utz party mix',
 'liver pate',
 'swiss roll',
 'congee',
 'cappuccino mix',
 'garlic fries',
 'york mints',
 'cereal bar',
 'date syrup',
 'cherry cobbler',
 'udis granola',
 'whole milk',
 'oatmeal pie',
 'kroger stevia',
 'falafel wrap',
 'beef braciola',
 'shrimp pasta',
 'tofu curry',
 'snack crackers']
    patterns = []
    patterns += ['Today I ate <blank1>']
    patterns += ["Today meal is <blank1>"]
    patterns += ['For today, my food is <blank1>']
    patterns += ["I had <blank1> for breakfast today."]
    patterns += ["I had <blank1> for lunch today."]
    patterns += ["I had <blank1> for dinner today."]
    patterns += ["I cooked <blank1> tonight."]
    patterns += ['<blank1>, <blank2>']
    patterns += ['Today I ate <blank1> and <blank2>']
    patterns += ["Today meal is <blank1> and <blank2>"]
    patterns += ['For today, my food is <blank1> and <blank2>']
    patterns += ["I had <blank1> and <blank2> for breakfast today."]
    patterns += ["I had <blank1> and <blank2> for lunch today."]
    patterns += ["I had <blank1> and <blank2> for dinner today."]
    patterns += ["I cooked <blank1> and <blank2> tonight."]
    patterns += ['<blank1>, <blank2>, <blank3>']
    patterns += ['Today I ate <blank1>, <blank2> and <blank3>']
    patterns += ["Today meal is <blank1> , <blank2> and <blank3>"]
    patterns += ['For today, my food is <blank1> , <blank2> and <blank3>']
    patterns += ["I had <blank1>, <blank2> and <blank3> for breakfast today."]
    patterns += ["I had <blank1>, <blank2> and <blank3> for lunch today."]
    patterns += ["I had <blank1>, <blank2> and <blank3> for dinner today."]
    patterns += ["I cooked <blank1>, <blank2> and <blank3> tonight."]
    s = []
    number = int(np.random.randint(low=1, high=4, size=1))
    if number == 1:
        pattern = patterns[:7]
        sentence = patterns[int(np.random.randint(low=0, high=7, size=1))]
        food1 = foodlist[int(np.random.randint(low=0, high=len(foodlist), size=1))]
        test = sentence.replace(',','').split(' ')

        sentence = sentence.replace('<blank1>',food1)
        s += [food1]
        test1 = sentence.replace(',','').split(' ')
    elif number == 2:
        pattern = patterns[7:15]
        sentence = patterns[int(np.random.randint(low=7, high=15, size=1))]
        food1 = foodlist[int(np.random.randint(low=0, high=len(foodlist), size=1))]
        food2 = foodlist[int(np.random.randint(low=0, high=len(foodlist), size=1))]
        test = sentence.replace(',','').split(' ')
        sentence = sentence.replace('<blank1>',food1)
        sentence = sentence.replace('<blank2>',food2)
        s += [food1]
        s += [food2]
        test1 = sentence.replace(',','').split(' ')
    else:
        pattern = patterns[15:]
        sentence = patterns[int(np.random.randint(low=15, high=22, size=1))]
        food1 = foodlist[int(np.random.randint(low=0, high=len(foodlist), size=1))]
        food2 = foodlist[int(np.random.randint(low=0, high=len(foodlist), size=1))]
        food3 = foodlist[int(np.random.randint(low=0, high=len(foodlist), size=1))]
        test = sentence.replace(',','').split(' ')

        sentence = sentence.replace('<blank1>',food1)
        sentence = sentence.replace('<blank2>',food2)
        sentence = sentence.replace('<blank3>',food3)
        s += [food1]
        s += [food2]
        s += [food3]
        test1 = sentence.replace(',','').split(' ')
    return sentence,s

def food_detection(sentence,recognizer):
    result = recognizer(sentence)
    i=0
    lst = []
    temp = ""
    while i < len(result):
        if result[i]['entity'] == 'U-FOOD':
            temp += result[i]['word'].replace('▁','')
            lst += [temp.strip()]
            temp = ''
        elif result[i]['entity'] == 'B-FOOD':
            temp = ''
            temp += result[i]['word'].replace('▁','')
            temp += ' '
        elif result[i]['entity'] == 'I-FOOD' and i!=0:
            if result[i]['start'] - result[i-1]['end'] < 1 and temp != '':
                temp += result[i]['word'].replace('▁','')
                temp += ' '
        elif result[i]['entity'] == 'L-FOOD' and i!=0 and temp != '':
            if result[i]['start'] - result[i-1]['end'] < 1:
                temp += result[i]['word'].replace('▁','')
                lst += [temp.strip()]
                temp = ''
        elif temp != '' and i==len(result)-1:
            lst += [temp.strip()]
            temp = ''
        elif result[i]['entity'] in ['U-TASTE','U-PHYSICAL_QUALITY','U-PROCESS','U-COLOR']:
            temp = ''
            temp += result[i]['word'].replace('▁','')
            temp += ' '
        i += 1
    return lst

def calculate(df):
    tokenizer = AutoTokenizer.from_pretrained("davanstrien/deberta-v3-base_fine_tuned_food_ner", model_max_length=512)
    model = AutoModelForTokenClassification.from_pretrained("davanstrien/deberta-v3-base_fine_tuned_food_ner")
    recognizer = pipeline("ner", model=model, tokenizer=tokenizer)
    sentence_list = df['sentence'].tolist()
    predict_label_list = []
    for item in sentence_list:
        pre_result = food_detection(item,recognizer)
        predict_label_list += [pre_result]
    return predict_label_list

def result_analysis(df):
    flat_true = []
    flat_pred = []
    for i in range(len(df['label'])):
        for item in df['label'][i]:
            flat_true += [item]
        for items in df['predicted_label'][i]:
            flat_pred += [items]
    fail = []
    for thing in flat_true:
        if thing not in flat_pred:
            fail += [thing]
    return fail,len(flat_true),len(flat_pred)
            
                   
                   

def main():
    with st.sidebar:
        st.write('create psuedo data for evaluation')
        sentences = []
        labels = []
        if st.button('create your data',key = 4):
            for i in range(500):
                temp_sentence, temp_label = create_train()
                sentences += [temp_sentence]
                labels += [temp_label]
            df_train1 = pd.DataFrame({'sentence':sentences, 'label':labels})
            st.write(df_train1)
            if len(df_train1) > 0:
                csv = df_train1.to_csv(index=False)
                b64 = base64.b64encode(csv.encode()).decode()
                href = f'<a href="data:file/csv;base64,{b64}" download="data.csv">Download CSV</a>'
                st.markdown(href, unsafe_allow_html=True)
    with st.expander('read before upload'):
        content = "upload a csv file to evaluate -- the total riws should not be over 1,000 for the efficiency, and each csv should contain the column call 'sentence' for sentence and column 'label' for label."
        st.write(content)
    uploaded_file = st.file_uploader("Choose a CSV file", type="csv")
    if uploaded_file is not None:
        df = pd.read_csv(uploaded_file)
        df['label'] = df['label'].apply(lambda x: change_label(x))
        st.write(df.head())
        if 'label' not in df.columns:
            st.write('please check column name to make it a suitable format')
        if 'sentence' not in df.columns:
            st.write('please check column name to make it a suitable format')
        else:
            st.write(len(df))
            if len(df) > 500:
                df = df[:500]
                st.write('this csv file is over 500 rows, so the analysis will be conducted only on the first 200 rows, otherwise the UI might crash')
            predict_label_list = calculate(df)
            df['predicted_label'] = predict_label_list
            st.write(df)
            st.write(type(df['label'][0]))
            fail,t,p = result_analysis(df)
            content = 'with '
            content += str(t)
            content += ' true label as results, '
            content += str(p)
            content += ' of them is sucessfully detected'
            st.write(content)
            item_counts = {}
            for item in fail:
                if item not in item_counts:
                    item_counts[item] = 0
                item_counts[item] += 1
            fig = go.Figure(data=[go.Bar(x=list(item_counts.keys()), y=list(item_counts.values()))])
            fig.update_layout(title='Frequency of Items in List')

            st.plotly_chart(fig)
            csv = df.to_csv(index=False)
            b64 = base64.b64encode(csv.encode()).decode()
            href = f'<a href="data:file/csv;base64,{b64}" download="data_eval.csv">Download CSV</a>'
            st.markdown(href, unsafe_allow_html=True)
            
                           
if __name__ == "__main__":
    main()
            
            
           